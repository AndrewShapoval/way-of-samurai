{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/WithAuthRedirect.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DialogItem","className","s","dialog","src","id","activeClassName","active","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","validate","required","placeholder","Dialogs","dialogsPage","dialogsElement","dialogs","map","d","key","messagesElement","messages","m","dialogsItems","values","addMessage","newMessageText","compose"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,sICI/MC,EAA6B,SAACC,GAAD,MAA0B,CACvDC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAoB,IAC3CC,EAD0C,uKAGxC,OAAKC,KAAKC,MAAMN,OAET,kBAACG,EAAcE,KAAKC,OAFI,kBAAC,IAAD,CAAUC,GAAI,eAHL,GAChBC,IAAML,WAStC,OADqCM,YAAQX,EAARW,CAAoCL,K,+FCC9DM,EAVI,SAACJ,GAChB,OACI,yBAAKK,UAAWC,IAAEC,QACd,yBACIC,IAAI,wHACR,kBAAC,IAAD,CAASP,GAAI,YAAcD,EAAMS,GAAIC,gBAAiBJ,IAAEK,QAASX,EAAMY,QCDpEC,EANC,SAACb,GACb,OACI,yBAAKK,UAAWC,IAAEQ,SAAUd,EAAMc,U,wCCsCpCC,EAAcC,YAAiB,IAgB/BC,EAAsBC,YAAwB,CAACC,KAAM,wBAA/BD,EAdsC,SAAClB,GAC/D,OACI,0BAAMoB,SAAUpB,EAAMqB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GAC1CH,KAAK,iBAAiBe,YAAY,wBAE7C,6BACI,4CAQDC,EA7CC,SAAC5B,GAEb,IAAIP,EAAQO,EAAM6B,YAEdC,EAAiBrC,EAAMsC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMsB,IAAKD,EAAExB,GAAIA,GAAIwB,EAAExB,QACnF0B,EAAkB1C,EAAM2C,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,QAASoB,IAAKG,EAAE5B,QAKlF,OAAKT,EAAMN,OAGP,yBAAKW,UAAWC,IAAEyB,SACd,yBAAK1B,UAAWC,IAAEgC,cACbR,GAEL,yBAAKzB,UAAWC,IAAE8B,UACd,6BACKD,GAEL,kBAAClB,EAAD,CAAqBG,SAfb,SAACmB,GACjBvC,EAAMwC,WAAWD,EAAOE,qBAGF,kBAAC,IAAD,CAAUxC,GAAI,Y,wBCf7ByC,sBACX9C,IACAO,aAToB,SAACV,GACrB,MAAO,CACHoC,YAAapC,EAAMoC,YACnBnC,OAAQD,EAAME,KAAKD,UAME,CAAC8C,iBAFfE,CAGbd","file":"static/js/4.58dcfbdc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__BXk8S\",\"dialogsItems\":\"Dialogs_dialogsItems__255_3\",\"active\":\"Dialogs_active__2HYi7\",\"dialog\":\"Dialogs_dialog__1N2Ok\",\"messages\":\"Dialogs_messages__1gkDu\",\"message\":\"Dialogs_message__2pnZ2\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const WithAuthRedirect = (Component: any) => {\r\n    class RedirectComponent extends React.Component<any, any> {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to= '/Login' />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let connectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return connectedAuthRedirectComponent\r\n}","import React from 'react';\r\nimport s from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nconst DialogItem = (props: PropsType) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <img\r\n                src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcS7WTP-tHQOZbAbB0ZmTDrs7XX3qjexEsykECZ5K5iYrBxndlD3&usqp=CAU\"/>\r\n            <NavLink to={\"/dialogs/\" + props.id} activeClassName={s.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from \"../Dialogs.module.css\";\r\n\r\ntype PropsType = {\r\n    message: string\r\n}\r\n\r\nconst Message = (props: PropsType) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {DialogsPageType} from \"../../redux/store\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {reduxForm, Field, InjectedFormProps} from \"redux-form\";\r\nimport {TextArea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\ntype PropsType = {\r\n    dialogsPage: DialogsPageType\r\n    addMessage: (values: string) => void\r\n    isAuth: boolean\r\n}\r\n\r\ntype FormDataType = {\r\n    newMessageText: string\r\n}\r\n\r\nconst Dialogs = (props: PropsType) => {\r\n\r\n    let state = props.dialogsPage\r\n\r\n    let dialogsElement = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElement = state.messages.map(m => <Message message={m.message} key={m.id}/>)\r\n    let addNewMessage = (values: FormDataType) => {\r\n        props.addMessage(values.newMessageText)\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/Login\"}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>\r\n                    {messagesElement}\r\n                </div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea} validate={[required, maxLength50]}\r\n                       name=\"newMessageText\" placeholder=\"Enter your message\"/>\r\n            </div>\r\n            <div>\r\n                <button>Add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm<FormDataType>({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {addMessage} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {compose} from \"redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    WithAuthRedirect,\r\n    connect(mapStateToProps, {addMessage}),\r\n)(Dialogs)\r\n\r\n// const DialogsContainer = connect(mapStateToProps, {\r\n//     addMessage,\r\n//     onChangeMessage\r\n// })(Dialogs);\r\n//\r\n// export default DialogsContainer;"],"sourceRoot":""}